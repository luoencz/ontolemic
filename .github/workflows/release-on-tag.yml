name: Release on tag (build + attach asset)

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Package frontend
        run: |
          bash ./scripts/package-frontend.sh

      - name: Find packaged artifact
        id: artifact
        run: |
          set -euo pipefail
          ARTIFACT_PATH=$(ls -t artifacts/ontolemic-frontend-*.tar.gz | head -n 1)
          echo "path=${ARTIFACT_PATH}" >> "$GITHUB_OUTPUT"
          echo "basename=$(basename "${ARTIFACT_PATH}")" >> "$GITHUB_OUTPUT"

      - name: Upload workflow artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.basename }}
          path: ${{ steps.artifact.outputs.path }}

      # Create a DRAFT release first, upload asset, then PUBLISH to ensure
      # any release webhooks fire only AFTER asset is available
      - name: Create draft release and attach asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          # Try to create a draft release; if it exists, proceed to upload
          gh release create "$TAG_NAME" "${{ steps.artifact.outputs.path }}" \
            --draft \
            --title "$TAG_NAME" \
            --notes "Automated release for $TAG_NAME" \
          || gh release upload "$TAG_NAME" "${{ steps.artifact.outputs.path }}" --clobber

      - name: Publish release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          gh release edit "$TAG_NAME" --draft=false


